services:
  frame:
    build:
      context: ./frame
      dockerfile: Dockerfile
    ports:
      - "6789:3000"
    environment:
      PORT: 3000
    depends_on:
      - studio
      - paper

  studio:
    build:
      context: ./studio
      dockerfile: Dockerfile
    ports:
      - "6788:8081"
    environment:
      BIND_ADDRESS: 0.0.0.0
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/db
      CLICKHOUSE_URL: clickhouse://clickhouse:9000?username=${CLICKHOUSE_USER}&password=${CLICKHOUSE_PASSWORD}&database=db
      PORT: 8081
      JWT_SECRET: ${JWT_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: $SMTP_PORT}
      SMTP_FROM: ${SMTP_FROM}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  paper:
    build:
      context: ./paper
      dockerfile: Dockerfile
    ports:
      - "6787:8080"
    environment:
      BIND_ADDRESS: 0.0.0.0
      DATABASE_URL: clickhouse://clickhouse:9000?username=${CLICKHOUSE_USER}&password=${CLICKHOUSE_PASSWORD}&database=db
      POSTGRES_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      PORT: 8080
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  db:
    image: postgres:16-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d db"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    volumes:
      - ./studio/migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/db?sslmode=disable",
        "up",
      ]
    depends_on:
      db:
        condition: service_healthy

  clickhouse:
    image: clickhouse/clickhouse-server:25.3.2-alpine
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_log:/var/log/clickhouse-server
      - ./clickhouse/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}

  redis:
    image: redis:7-alpine
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?}

volumes:
  db_data:
  clickhouse_data:
  clickhouse_log:
  redis_data:
